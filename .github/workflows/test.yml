name: Test Environment Setup

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-environment:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Mambaforge
        use-mamba: true

    - name: Create conda environment from env.yml
      shell: bash -l {0}
      run: |
        conda env create -f env.yml
        conda activate ftw-tutorial

    - name: Install pip requirements
      shell: bash -l {0}
      run: |
        conda activate ftw-tutorial
        pip install -r requirements.txt

    - name: Verify installation
      shell: bash -l {0}
      run: |
        conda activate ftw-tutorial
        python --version
        python -c "import ftw_tools; print('ftw-tools version:', ftw_tools.__version__)"
        python -c "import geopandas; print('geopandas version:', geopandas.__version__)"
        python -c "import leafmap; print('leafmap version:', leafmap.__version__)"
        python -c "import rasterio; print('rasterio version:', rasterio.__version__)"
        python -c "import torchgeo; print('torchgeo version:', torchgeo.__version__)"
        python -c "import torch; print('PyTorch version:', torch.__version__)"
        python -c "import gdal; print('GDAL version:', gdal.__version__)"

    - name: Test notebook execution
      shell: bash -l {0}
      run: |
        conda activate ftw-tutorial
        python -c "import nbformat; print('nbformat available')"
        python -c "import jupyter; print('jupyter available')"
